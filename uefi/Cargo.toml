[package]
name = "uefi"
version = "0.35.0"
readme = "README.md"
description = """
This crate makes it easy to develop Rust software that leverages safe,
convenient, and performant abstractions for UEFI functionality.
"""

authors.workspace = true
categories.workspace = true
edition.workspace = true
keywords.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true

# Feature documentation in uefi/lib.rs.
[features]
# KEEP this feature list in sync with doc in uefi/lib.rs!
default = [ ]
alloc = []

# Generic gate to code that uses unstable features of Rust, needing a nightly
# toolchain.
unstable = []

# Helper features:
logger = []
global_allocator = []
panic_handler = []
# Some convenience when running inside QEMU.
# - dependency log-debugcon: logical, not technical
# - dependency panic_handler: logical, not technical
qemu = ["dep:qemu-exit", "panic_handler", "log-debugcon"]
log-debugcon = []

[dependencies]
bitflags.workspace = true
log.workspace = true
ptr_meta.workspace = true
uguid.workspace = true
cfg-if = "1.0.0"
ucs2 = "0.3.3"
uefi-macros = "0.18.1"
uefi-raw = "0.11.0"
qemu-exit = { version = "3.0.2", optional = true }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
